package lam;

import java.util.*;
import java.math.BigInteger;
import java.io.*;
import java.nio.*;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;

class Matrix {

    int n, m;
    int[][] matrix;

    Matrix(int n, int m) {
        this.n = n;
        this.m = m;
        this.matrix = new int[n][m];
    }

    public void nextMatrix(Scanner sc) {
        for (int i = 0; i < this.n; ++i) {
            for (int j = 0; j < this.m; ++j) {
                this.matrix[i][j] = sc.nextInt();
            }
        }
    }

    public Matrix mul(Matrix o){
        Matrix c = new Matrix(n, o.m);
        for(int i = 0; i < n; ++i){
            for(int j = 0; j < o.m; ++j){
                c.matrix[i][j] = 0;
                for(int k = 0; k < m; ++k){
                    c.matrix[i][j] += matrix[i][k] * o.matrix[k][j];
                }
            }
        }
        return c;
    }
    
    public String toString() {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < m; ++j) {
                sb.append(matrix[i][j] + " ");
            }
            sb.append("\n");
        }
        return sb.toString();
    }
}

public class solve {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(), m = sc.nextInt(), p = sc.nextInt();
        Matrix a = new Matrix(n,m);
        a.nextMatrix(sc);
        Matrix b = new Matrix(m,p);
        b.nextMatrix(sc);
        System.out.println(a.mul(b));
    }
}

