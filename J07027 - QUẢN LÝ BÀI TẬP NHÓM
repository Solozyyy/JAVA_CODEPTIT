package lam;

import java.util.*;
import java.math.BigInteger;
import java.io.*;
import java.nio.*;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;

class SV{
    String id, ten, sdt;
    
    SV(String id, String ten, String sdt){
        this.id = id;
        this.ten = ten;
        this.sdt = sdt;
    }
    
}

class BT{
    String id, ten;
    
    BT(int id, Scanner sc){
        this.id = Integer.toString(id);
        this.ten = sc.nextLine();
    }
}

class NHOM implements Comparable<NHOM>{
    SV sv;
    BT bt;
    
    NHOM(SV sv, BT bt){
        this.sv = sv;
        this.bt = bt;
    }
    
    public int compareTo(NHOM o){
        return sv.id.compareTo(o.sv.id);
    }
    
    public String toString(){
        return sv.id + " " + sv.ten + " " + sv.sdt + " " + bt.id + " " + bt.ten;
    }
}

public class solve {

    public static int tc;
    public static Scanner sc;

    public static void main(String[] args) throws FileNotFoundException, IOException, ClassNotFoundException {

        sc = new Scanner(new File("SINHVIEN.in"));
        tc = Integer.parseInt(sc.nextLine());
        Map<String, SV> m1 = new LinkedHashMap<>();
        
        while(tc-->0){
            String id = sc.nextLine();
            m1.put(id, new SV(id, sc.nextLine(), sc.nextLine()));
        }
        
        sc = new Scanner(new File("BAITAP.in"));
        tc = Integer.parseInt(sc.nextLine());
        Map<String, BT> m2 = new LinkedHashMap<>();
        for(int i = 1; i <= tc; ++i){
            m2.put(Integer.toString(i), new BT(i, sc));
        }
        
        sc = new Scanner(new File("NHOM.in"));
        ArrayList<NHOM> ls = new ArrayList<>();
        while(sc.hasNextLine()){
            String[] line = sc.nextLine().split("\\s+");
            ls.add(new NHOM(m1.get(line[0]), m2.get(line[1])));
        }
        
        Collections.sort(ls);
        for(NHOM x : ls){
            System.out.println(x);
        }
    }
}
