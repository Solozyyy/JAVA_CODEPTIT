package lam;

import java.util.*;
import java.math.BigInteger;
import java.io.*;
import java.nio.*;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;

class SV{
    String id, ten, lop, email;
    
    public static String chuanHoa(String s){
        StringBuilder sb = new StringBuilder();
        String[] line = s.trim().split("\\s+");
        for(String x : line){
            sb.append(Character.toUpperCase(x.charAt(0)));
            sb.append(x.substring(1).toLowerCase() + " ");
        }
        return sb.toString().trim();
    }
    
    SV(String id, String ten, String lop, String email){
        this.id = id;
        this.ten = chuanHoa(ten);
        this.lop = lop;
        this.email = email;
    }
    
}

class MH{
    String id, ten;
    int stc;
    
    MH(String id, String ten, String stc){
        this.id = id;
        this.ten = ten;
        this.stc = Integer.parseInt(stc);
    }
}

class BD implements Comparable<BD>{
    SV sv;
    MH mh;
    float diem;
    
    BD(SV sv, MH mh, float d){
        this.sv = sv;
        this.mh = mh;
        this.diem = d;
    }
    
    public int compareTo(BD o){
        int cmpMmh = mh.id.compareTo(o.mh.id);
        if(cmpMmh != 0) return cmpMmh;
        return sv.id.compareTo(o.sv.id);
    }
    
    public String toString(){
        String formattedDiem = (diem == (int) diem) ? String.valueOf((int) diem) : String.format("%.1f", diem);
        return sv.id + " " + sv.ten + " " + mh.id + " " + mh.ten + " " + formattedDiem;
    }
}

public class solve {

    public static int tc;
    public static Scanner sc;

    public static void main(String[] args) throws FileNotFoundException, IOException, ClassNotFoundException {

        sc = new Scanner(new File("SINHVIEN.in"));
        tc = Integer.parseInt(sc.nextLine());
        Map<String, SV> m1 = new LinkedHashMap<>();
        
        while(tc-->0){
            String id = sc.nextLine();
            m1.put(id, new SV(id, sc.nextLine(), sc.nextLine(), sc.nextLine()));
        }
        
        sc = new Scanner(new File("MONHOC.in"));
        tc = Integer.parseInt(sc.nextLine());
        Map<String, MH> m2 = new LinkedHashMap<>();
        for(int i = 1; i <= tc; ++i){
            String id = sc.nextLine();
            m2.put(id, new MH(id, sc.nextLine(), sc.nextLine()));
        }
        
        sc = new Scanner(new File("BANGDIEM.in"));
        ArrayList<BD> ls = new ArrayList<>();
        tc = Integer.parseInt(sc.nextLine());
        while(tc-->0){
            String[] line = sc.nextLine().split("\\s+");
            ls.add(new BD(m1.get(line[0]), m2.get(line[1]), Float.parseFloat(line[2])));
        }
        
        Collections.sort(ls);
        
        int t = Integer.parseInt(sc.nextLine());
        while(t-->0){
            String s = sc.nextLine();
            System.out.println("BANG DIEM lop " + s + ":");
            for(BD x : ls){
                if(x.sv.lop.equals(s)){
                    System.out.println(x);
                }
            }
        }
    }
}
